# Generated by Django 4.2.1 on 2023-07-23 01:41

from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
            ],
            options={
                'verbose_name': 'Collection',
                'verbose_name_plural': 'Collections',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
                ('hexa_value', models.CharField(max_length=24, verbose_name='Hexa Value')),
            ],
            options={
                'verbose_name': 'Color',
                'verbose_name_plural': 'Colors',
            },
        ),
        migrations.CreateModel(
            name='ManufacturingMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
            ],
            options={
                'verbose_name': 'Manufacturing method',
                'verbose_name_plural': 'Manufacturing methods',
            },
        ),
        migrations.CreateModel(
            name='PictureType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
            ],
            options={
                'verbose_name': 'Picture type',
                'verbose_name_plural': 'Picture types',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('title', models.CharField(max_length=256, verbose_name='Title')),
                ('title_en', models.CharField(max_length=256, null=True, verbose_name='Title')),
                ('title_de', models.CharField(max_length=256, null=True, verbose_name='Title')),
                ('title_uz', models.CharField(max_length=256, null=True, verbose_name='Title')),
                ('photo', models.ImageField(upload_to='images/store/products/%Y/%m/%d', verbose_name='Photo')),
                ('description', models.TextField(verbose_name='Description')),
                ('description_en', models.TextField(null=True, verbose_name='Description')),
                ('description_de', models.TextField(null=True, verbose_name='Description')),
                ('description_uz', models.TextField(null=True, verbose_name='Description')),
                ('no_in_pack', models.PositiveIntegerField(verbose_name='Number in a pack')),
                ('status', models.CharField(choices=[('h', 'Hit'), ('n', 'New'), ('s', 'Sale')], default='n', max_length=1, verbose_name='Status')),
                ('price', models.DecimalField(decimal_places=2, max_digits=24, verbose_name='Price')),
                ('active', models.BooleanField(default=True, verbose_name='Is active')),
                ('brand', models.ManyToManyField(related_name='products', to='store.brand', verbose_name='Brand')),
                ('collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='store.collection', verbose_name='Collection')),
                ('color', models.ManyToManyField(related_name='products', to='store.color', verbose_name='Color')),
                ('manufacturing_method', models.ManyToManyField(related_name='products', to='store.manufacturingmethod', verbose_name='Manufacture method')),
                ('picture_type', models.ManyToManyField(related_name='products', to='store.picturetype', verbose_name='Picture type')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Width length')),
                ('height', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Height length')),
            ],
            options={
                'verbose_name': 'Size',
                'verbose_name_plural': 'Sizes',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='UZ', verbose_name='Phone number')),
                ('region', models.CharField(max_length=128, verbose_name='Region')),
                ('district', models.CharField(max_length=128, verbose_name='City or district')),
                ('address', models.CharField(max_length=256, verbose_name='Address')),
                ('orient', models.CharField(blank=True, max_length=256, null=True, verbose_name='Orient')),
            ],
            options={
                'verbose_name': 'Store',
                'verbose_name_plural': 'Stores',
            },
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
            ],
            options={
                'verbose_name': 'Style',
                'verbose_name_plural': 'Styles',
            },
        ),
        migrations.CreateModel(
            name='TargetRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
            ],
            options={
                'verbose_name': 'Target room',
                'verbose_name_plural': 'Target rooms',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('video', models.FileField(upload_to='videos/store/products/%Y/%m/%d', verbose_name='Video file')),
                ('photo', models.ImageField(upload_to='videos/store/products/%Y/%m/%d', verbose_name='Photo')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='store.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Product video',
                'verbose_name_plural': 'Product videos',
            },
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('title', models.CharField(max_length=256, verbose_name='Title')),
                ('title_en', models.CharField(max_length=256, null=True, verbose_name='Title')),
                ('title_de', models.CharField(max_length=256, null=True, verbose_name='Title')),
                ('title_uz', models.CharField(max_length=256, null=True, verbose_name='Title')),
                ('photo', models.ImageField(upload_to='images/store/products/%Y/%m/%d', verbose_name='Photo')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='store.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Variant',
                'verbose_name_plural': 'Variants',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='size',
            field=models.ManyToManyField(related_name='products', to='store.size', verbose_name='Size'),
        ),
        migrations.AddField(
            model_name='product',
            name='style',
            field=models.ManyToManyField(related_name='products', to='store.style', verbose_name='Style'),
        ),
        migrations.AddField(
            model_name='product',
            name='target_room',
            field=models.ManyToManyField(related_name='products', to='store.targetroom', verbose_name='Target room'),
        ),
    ]
